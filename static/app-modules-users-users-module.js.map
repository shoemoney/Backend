{"version":3,"sources":["webpack:///./src/app/core/services/user.service.ts","webpack:///./src/app/modules/users/user-list/user-list.component.html","webpack:///./src/app/modules/users/user-list/user-list.component.scss","webpack:///./src/app/modules/users/user-list/user-list.component.ts","webpack:///./src/app/modules/users/users-routing.module.ts","webpack:///./src/app/modules/users/users.module.ts"],"names":[],"mappings":"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","file":"app-modules-users-users-module.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { User } from '../../core/models/user.model';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private UserUrl = 'http://localhost:3000/api/users';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll(): Observable<User[]> {\r\n    return this.http.get<User[]>(this.UserUrl);\r\n  }\r\n  post(data): Observable<User> {\r\n    return this.http.post<User>(`${this.UserUrl}`, data);\r\n  }\r\n  put(data): Observable<User> {\r\n    return this.http.put<User>(`${this.UserUrl}${data.id}/`, data);\r\n  }\r\n  delete(data): Observable<User> {\r\n    return this.http.delete<User>(`${this.UserUrl}${data.id}/`);\r\n  }\r\n}\r\n","module.exports = \"<div class=\\\"mat-elevation-z8\\\" style=\\\"width: 100%\\\">\\r\\n  <div class=\\\"loading-shade\\\" *ngIf=\\\"!users\\\">\\r\\n    <mat-spinner *ngIf=\\\"!errorMessage\\\" [diameter]=\\\"40\\\" [color]=\\\"'warn'\\\"></mat-spinner>\\r\\n    <div *ngIf=\\\"errorMessage\\\">{{errorMessage}}</div>\\r\\n  </div>\\r\\n\\r\\n<div *ngIf=\\\"users\\\">\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"table-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef colspan=\\\"5\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n        </mat-form-field>\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"username\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Username </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.username}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"first_name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> First name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.first_name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"last_name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Last name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.last_name}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"email\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Actions </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <i class=\\\"material-icons\\\">delete_outline</i>\\r\\n        <i class=\\\"material-icons\\\">edit</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"disclaimer\\\">\\r\\n      <td mat-footer-cell *matFooterCellDef colspan=\\\"5\\\">\\r\\n        Registered users: {{users.length}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"['table-filter']\\\"></tr>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    <tr mat-footer-row *matFooterRowDef=\\\"['disclaimer']\\\"></tr>\\r\\n\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[5, 10, 20]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"table {\\n  width: 100%;\\n  padding: 10px; }\\n\\n.loading-shade {\\n  position: relative;\\n  background: rgba(0, 0, 0, 0.15);\\n  padding: 50px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserService } from '../../../core/services/user.service';\r\nimport { User } from '../../../core/models/user.model';\r\nimport { MatPaginator, MatTableDataSource, MatSort } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  dataSource: MatTableDataSource<User>;\r\n  users: User[];\r\n  displayedColumns: string[] = ['username', 'first_name', 'last_name', 'email', 'actions'];\r\n  errorMessage: string;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.userService.getAll().subscribe(\r\n      data => {\r\n        this.users = data;\r\n        this.dataSource = new MatTableDataSource<User>(this.users);\r\n        this.dataSource.paginator = this.paginator;\r\n        this.dataSource.sort = this.sort;\r\n      },\r\n      error => {\r\n        console.error('An error occured', error);\r\n        this.errorMessage = error.message;\r\n      }\r\n      );\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserListComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsersRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UsersRoutingModule } from './users-routing.module';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserService } from '../../core/services/user.service';\r\nimport { MaterialModule } from '../../shared/material/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    UsersRoutingModule,\r\n    MaterialModule\r\n  ],\r\n  declarations: [UserListComponent],\r\n  providers: [UserService]\r\n})\r\nexport class UsersModule { }\r\n"],"sourceRoot":""}